spring.application.name=model-service
server.port=${PORT:8484}

# External Service URLs for Production (Render internal URLs)
pollen.service.base-url=${POLLEN_SERVICE_URL:https://allermind-pollen.onrender.com}
weather.service.base-url=${WEATHER_SERVICE_URL:https://allermind-weather.onrender.com}
ml.model.service.base-url=${ML_MODEL_SERVICE_URL:http://ml-model-service:8000}
user.preference.service.base-url=${USER_PREFERENCE_SERVICE_URL:https://allermind-userpreference.onrender.com}

# HTTP Client Configuration
spring.webflux.timeout=30s
spring.mvc.async.request-timeout=30000

# Logging
logging.level.com.allermind.model=INFO
logging.level.org.springframework.web.client.RestTemplate=WARN
logging.level.org.springframework.web.client.RestClient=WARN
logging.level.root=WARN
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator for health checks
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Server configuration
server.error.include-message=never
server.error.include-binding-errors=never
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# Circuit Breaker Configuration (if needed)
resilience4j.circuitbreaker.instances.external-services.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.external-services.wait-duration-in-open-state=60000
resilience4j.circuitbreaker.instances.external-services.sliding-window-size=10